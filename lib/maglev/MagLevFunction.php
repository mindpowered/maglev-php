<?php
/**
 * Generated by Haxe 4.1.1
 */

namespace maglev;

use \php\Boot;

class MagLevFunction extends MagLevAny {
	/**
	 * @var string
	 */
	public $name;
	/**
	 * @var \Closure
	 */
	public $value;

	/**
	 * @param \Closure $value
	 * 
	 * @return MagLevFunction
	 */
	public static function fromFunction ($value) {
		#/src/maglev/MagLevTypes.hx:167: characters 9-41
		return new MagLevFunction($value);
	}

	/**
	 * @param \Closure $value
	 * @param string $name
	 * 
	 * @return MagLevFunction
	 */
	public static function fromNamedFunction ($value, $name) {
		#/src/maglev/MagLevTypes.hx:170: characters 9-47
		return new MagLevFunction($value, $name);
	}

	/**
	 * @param \Closure $value
	 * @param string $name
	 * 
	 * @return void
	 */
	public function __construct ($value, $name = null) {
		#/src/maglev/MagLevTypes.hx:173: characters 9-25
		$this->name = $name;
		#/src/maglev/MagLevTypes.hx:174: characters 9-27
		$this->value = $value;
		#/src/maglev/MagLevTypes.hx:175: characters 9-16
		parent::__construct();
	}

	/**
	 * @param MagLevArray $args
	 * 
	 * @return MagLevResult
	 */
	public function call ($args) {
		#/src/maglev/MagLevTypes.hx:178: characters 9-27
		return ($this->value)($args);
	}

	/**
	 * @return string
	 */
	public function getName () {
		#/src/maglev/MagLevTypes.hx:184: characters 9-20
		return $this->name;
	}

	/**
	 * @return MagLevType
	 */
	public function getType () {
		#/src/maglev/MagLevTypes.hx:187: characters 9-35
		return MagLevType::MagLevType_Function();
	}

	/**
	 * @return bool
	 */
	public function hasName () {
		#/src/maglev/MagLevTypes.hx:181: characters 9-28
		return $this->name !== null;
	}

	/**
	 * @param MagLevAny $other
	 * 
	 * @return bool
	 */
	public function isEqual ($other) {
		#/src/maglev/MagLevTypes.hx:190: lines 190-201
		if ($other->getType() === $this->getType()) {
			#/src/maglev/MagLevTypes.hx:191: characters 13-49
			$o = Boot::typedCast(Boot::getClass(MagLevFunction::class), $other);
			#/src/maglev/MagLevTypes.hx:192: lines 192-197
			if ($this->hasName() && $o->hasName()) {
				#/src/maglev/MagLevTypes.hx:193: characters 17-48
				return $this->getName() === $o->getName();
			} else {
				#/src/maglev/MagLevTypes.hx:196: characters 17-29
				return false;
			}
		} else {
			#/src/maglev/MagLevTypes.hx:200: characters 13-25
			return false;
		}
	}

	/**
	 * @return MagLevString
	 */
	public function toJson () {
		#/src/maglev/MagLevTypes.hx:204: lines 204-209
		if ($this->hasName()) {
			#/src/maglev/MagLevTypes.hx:205: characters 13-63
			return new MagLevString("<function " . ($this->name??'null') . ">");
		} else {
			#/src/maglev/MagLevTypes.hx:208: characters 13-51
			return new MagLevString("<anon func>");
		}
	}
}

Boot::registerClass(MagLevFunction::class, 'maglev.MagLevFunction');
