<?php
/**
 * Generated by Haxe 4.1.1
 */

namespace maglev;

use \php\Boot;
use \haxe\ds\StringMap;

class MagLev {
	/**
	 * @var StringMap
	 */
	static public $_instances;

	/**
	 * @var StringMap
	 */
	public $_listeners;
	/**
	 * @var StringMap
	 */
	public $_methods;

	/**
	 * @param string $key
	 * 
	 * @return MagLev
	 */
	public static function getInstance ($key) {
		#/src/maglev/MagLev.hx:60: lines 60-62
		if (!array_key_exists($key, MagLev::$_instances->data)) {
			#/src/maglev/MagLev.hx:61: characters 13-43
			$this1 = MagLev::$_instances;
			$v = new MagLev();
			$this1->data[$key] = $v;
		}
		#/src/maglev/MagLev.hx:63: characters 16-31
		return (MagLev::$_instances->data[$key] ?? null);
	}

	/**
	 * @return void
	 */
	public function __construct () {
		#/src/maglev/MagLev.hx:54: characters 56-95
		$this->_listeners = new StringMap();
		#/src/maglev/MagLev.hx:53: characters 47-79
		$this->_methods = new StringMap();
	}

	/**
	 * @param string $method
	 * @param MagLevArray $args
	 * 
	 * @return MagLevResult
	 */
	public function call ($method, $args) {
		#/src/maglev/MagLev.hx:71: lines 71-76
		if (array_key_exists($method, $this->_methods->data)) {
			#/src/maglev/MagLev.hx:72: characters 13-47
			return ($this->_methods->data[$method] ?? null)->call($args);
		} else {
			#/src/maglev/MagLev.hx:74: characters 51-70
			$err = new MagLevNumber(0);
			#/src/maglev/MagLev.hx:74: characters 72-130
			$err1 = new MagLevString("Method '" . ($method??'null') . "' not registered");
			#/src/maglev/MagLev.hx:74: characters 13-150
			$err2 = new MagLevError($err, $err1, new MagLevNull());
			#/src/maglev/MagLev.hx:75: characters 13-47
			return MagLevResult::fromError($err2);
		}
	}

	/**
	 * @param string $event
	 * @param MagLevArray $args
	 * 
	 * @return void
	 */
	public function emit ($event, $args) {
		#/src/maglev/MagLev.hx:87: lines 87-92
		if (array_key_exists($event, $this->_listeners->data)) {
			#/src/maglev/MagLev.hx:88: characters 13-47
			$listeners = ($this->_listeners->data[$event] ?? null);
			#/src/maglev/MagLev.hx:89: lines 89-91
			$_g = 0;
			while ($_g < $listeners->length) {
				#/src/maglev/MagLev.hx:89: characters 17-25
				$listener = ($listeners->arr[$_g] ?? null);
				#/src/maglev/MagLev.hx:89: lines 89-91
				++$_g;
				#/src/maglev/MagLev.hx:90: characters 17-36
				$listener->call($args);
			}
		}
	}

	/**
	 * @param string $event
	 * @param MagLevFunction $callback
	 * 
	 * @return void
	 */
	public function listen ($event, $callback) {
		#/src/maglev/MagLev.hx:80: lines 80-82
		if (!array_key_exists($event, $this->_listeners->data)) {
			#/src/maglev/MagLev.hx:81: characters 13-60
			$this1 = $this->_listeners;
			$v = new \Array_hx();
			$this1->data[$event] = $v;
		}
		#/src/maglev/MagLev.hx:83: characters 9-41
		$_this = ($this->_listeners->data[$event] ?? null);
		$_this->arr[$_this->length++] = $callback;
	}

	/**
	 * @param string $method
	 * @param MagLevFunction $callback
	 * 
	 * @return void
	 */
	public function register ($method, $callback) {
		#/src/maglev/MagLev.hx:67: characters 9-36
		$this->_methods->data[$method] = $callback;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$_instances = new StringMap();
	}
}

Boot::registerClass(MagLev::class, 'maglev.MagLev');
MagLev::__hx__init();
